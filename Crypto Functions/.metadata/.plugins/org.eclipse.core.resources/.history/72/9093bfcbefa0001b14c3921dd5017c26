package Crypto;

import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.xml.bind.DatatypeConverter;

public class SHA256 {
	
	public static void do_SHA(String input, String shaFile) throws NoSuchAlgorithmException, IOException{ 
        // Static getInstance method is called with hashing SHA 
        MessageDigest md = MessageDigest.getInstance("SHA-256");
        byte[] data = input.getBytes("UTF_8");
        md.update(data);
        // digest() method called to calculate message digest of an input
        byte[] digest = md.digest();
        saveDigest(digest, shaFile);
    }
	
	public static void saveDigest(byte[] digest, String fileName) throws IOException {
		File file = new File(fileName);
        if (file.createNewFile()) {
            System.out.println("Digest File has been created.");
    	    try{      
    	        FileOutputStream fos = new FileOutputStream(fileName);
    	        fos.write(digest);   
    	        fos.close();
    	    }catch(Exception e){
    	    	System.out.println(e);
    	    }       
       }  
       else {
           System.out.println("Digest file already exists.");
       }
	}
	
	public static byte[] readDigest(String fileName) throws IOException {
		
		FileInputStream fin = new FileInputStream(fileName);
        byte[] textbyte = new byte[fin.available()];
        fin.read(textbyte);
        fin.close();
        System.out.println("Digest File has been read...");
        return textbyte;
	}
	
	public void startSHA() throws Exception {
		String plainText = AESMode.readLines("Message.txt");
		System.out.println(plainText);
		do_SHA(plainText, "SHA_256" + "_Digest.txt");
		byte[] digest = readDigest("SHA_256" + "_Digest.txt");
	    System.out.println("The Message Digest is :" + DatatypeConverter.printHexBinary(digest));
	}

}
